# Autogenerated by Gerrit Code Review 
# DO NOT EDIT

$home_link = $ENV{'GERRIT_CONTEXT_PATH'};
$home_link_str = 'Code Review';
$favicon = 'favicon.ico';
$logo = 'gitweb-logo.png';
$javascript = 'gitweb.js';
@stylesheets = ('gitweb-default.css');
$site_name = $home_link_str;
$site_name = qq{$1 $site_name} if $ENV{'SERVER_NAME'} =~ m,^([^.]+(?:\.[^.]+)?)(?:\.|$),;
$prevent_xss = 1;
{
  my $secure = $ENV{'HTTPS'} =~ /^ON$/i;
  my $http_url = $secure ? 'https://' : 'http://';
  $http_url .= qq{$ENV{'GERRIT_USER_NAME'}@}
    unless $ENV{'GERRIT_ANONYMOUS_READ'};
  $http_url .= $ENV{'SERVER_NAME'};
  $http_url .= qq{:$ENV{'SERVER_PORT'}}
    if (( $secure && $ENV{'SERVER_PORT'} != 443)
     || (!$secure && $ENV{'SERVER_PORT'} != 80)
    );
  $http_url .= qq{$ENV{'GERRIT_CONTEXT_PATH'}p};
  push @git_base_url_list, $http_url;
}
if ($ENV{'GERRIT_USER_NAME'}) {
  push @git_base_url_list, join('', 'ssh://', $ENV{'GERRIT_USER_NAME'}, '@', $ENV{'SERVER_NAME'}, ':29418');
}
sub add_review_link {
  my $h = shift;
  my $q;
  if (!$h || $h eq 'HEAD') {
    $q = qq{#q,project:$ENV{'GERRIT_PROJECT_NAME'},n,z};
  } elsif ($h =~ /^refs\/heads\/([-\w]+)$/) {
    $q = qq{#q,project:$ENV{'GERRIT_PROJECT_NAME'}+branch:$1,n,z};
  } elsif ($h =~ /^refs\/changes\/\d{2}\/(\d+)\/\d+$/) {
    $q = qq{#/c/$1};
  } else {
    $q = qq{#/q/$h,n,z};
  }
  my $r = qq{$ENV{'GERRIT_CONTEXT_PATH'}$q};
  push @{$feature{'actions'}{'default'}},
      ('review',$r,'commitdiff');
}
if ($cgi->param('hb')) {
  add_review_link($cgi->param('hb'));
} elsif ($cgi->param('h')) {
  add_review_link($cgi->param('h'));
} else {
  add_review_link();
}
$projectroot = '/var/lib/jenkins/workspace/lagom-samples/git';
$export_auth_hook = sub {
    my $dir = shift;
    my $name = $ENV{'GERRIT_PROJECT_NAME'};
    my $allow = qq{$projectroot/$name.git};
    return $dir eq $allow;
  };
$feature{'pathinfo'}{'override'} = 0;
$feature{'pathinfo'}{'default'} = [0];
$feature{'forks'}{'override'} = 0;
$feature{'forks'}{'default'} = [0];
